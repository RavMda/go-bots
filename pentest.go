package main

import (
	"bufio"
	"go-pen/bot"
	. "go-pen/config"
	"go-pen/guard"
	. "go-pen/guard"
	"log"
	"net"
	"os"
	"time"

	"github.com/SteffenLoges/socks4"
)

func parseProxies() []string {
	file, err := os.Open("proxies.txt")

	if err != nil {
		log.Fatal("Something is wrong with proxies.txt, ", err)
	}

	scanner := bufio.NewScanner(file)
	scanner.Split(bufio.ScanLines)

	var proxies []string

	for scanner.Scan() {
		proxies = append(proxies, scanner.Text())
	}

	file.Close()

	return proxies
}

func dial(proxy string, address string) (net.Conn, bot.Dialer, error) {
	config := GetConfig()

	dialer := socks4.Dialer(socks4.SOCKS4, proxy, "", config.Timeout*time.Second)
	conn, err := dialer("tcp", address)

	return conn, dialer, err
}

func proxyBot(proxy string, address string) {
	guard := guard.GetGuard()
	conn, dialer, err := dial(proxy, address)

	if err != nil {
		guard.Decrement()
		return
	}

	bot.Maidan(conn, bot.Data{Dialer: dialer})
}

func main() {
	proxies := parseProxies()

	config := GetConfig()
	guard := GetGuard()

	for {
		for _, proxy := range proxies {
			guard.Increment()

			go proxyBot(proxy, config.Address)
			time.Sleep(config.Cooldown * time.Millisecond)
		}
	}
}
